# HG changeset patch
# User Sachin Hosmani <sachinhosmani2@gmail.com>
# Date 1367045210 -19800
# Node ID fc05895689dbaacf864d622d1178c6ef4852bbd8
# Parent  ba71b389413fc63e4599ddb5ba2cf64f54a0e9a0
Hide globally installed addon from Addon Manager when disabled

diff --git a/toolkit/mozapps/extensions/content/extensions.js b/toolkit/mozapps/extensions/content/extensions.js
--- a/toolkit/mozapps/extensions/content/extensions.js
+++ b/toolkit/mozapps/extensions/content/extensions.js
@@ -1392,30 +1392,34 @@
     aList.appendChild(element);
 }
 
 function getAddonsAndInstalls(aType, aCallback) {
   let addons = null, installs = null;
   let types = (aType != null) ? [aType] : null;
 
   AddonManager.getAddonsByTypes(types, function getAddonsAndInstalls_getAddonsByTypes(aAddonsList) {
-    addons = aAddonsList;
+    // Don't show globally installed add-ons that are disabled
+    addons = aAddonsList.filter(function addonsFilter(aAddon) {
+      return !(aAddon.scope === AddonManager.SCOPE_APPLICATION && 
+          aAddon.userDisabled === true);
+    });
     if (installs != null)
       aCallback(addons, installs);
   });
 
   AddonManager.getInstallsByTypes(types, function getAddonsAndInstalls_getInstallsByTypes(aInstallsList) {
     // skip over upgrade installs and non-active installs
     installs = aInstallsList.filter(function installsFilter(aInstall) {
       return !(aInstall.existingAddon ||
                aInstall.state == AddonManager.STATE_AVAILABLE);
     });
 
     if (addons != null)
-      aCallback(addons, installs)
+      aCallback(addons, installs);
   });
 }
 
 function doPendingUninstalls(aListBox) {
   // Uninstalling add-ons can mutate the list so find the add-ons first then
   // uninstall them
   var items = [];
   var listitem = aListBox.firstChild;
